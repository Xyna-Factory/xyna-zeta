/*
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * Copyright 2023 Xyna GmbH, Germany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 */

 @use '../../const' as *;
 @use '@angular/material' as mat;

 :host {
     display: inherit;

     &::ng-deep {

        .mdc-checkbox__background {
            border-width: 1px;
        }

         .mdc-checkbox__background,
         .mdc-checkbox__mixedmark,
         .mdc-checkbox__checkmark,
         .mdc-checkbox__checkmark-path {
             transition: none !important;
             animation: none !important;
         }

         .mdc-checkbox__mixedmark {
             width: 4px;
             height: 4px;
         }

         .mat-mdc-checkbox {
             // height: $xc-checkbox-height;
             display: flex;
             align-items: center;

             .mdc-form-field .mdc-checkbox {
                 padding: 0;
                 margin: 0;
                 height: $xc-checkbox-height;
                 width: $xc-checkbox-height;
                 flex: unset;
                 display: flex;
                 justify-content: center;
                 align-items: center;

                 .mat-mdc-checkbox-touch-target,
                 input {
                     height: 16px;
                     width: 16px;
                     top: 50%;
                     left: 50%;
                     transform: translate(-50%, -50%);
                 }

                 .mdc-checkbox__background {
                     position: relative;
                     top: unset;
                     left: unset;
                 }
             }
         }

         .mat-mdc-checkbox .mdc-checkbox__ripple {
             left: calc(50% - 14px);
             top: calc(50% - 14px);
             height: 28px;
             width: 28px;
         }

         .mdc-checkbox:hover .mdc-checkbox__ripple,
         .mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mdc-checkbox__ripple,
         .mdc-checkbox:hover .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate=true])~.mdc-checkbox__background,
         .mdc-checkbox:active .mdc-checkbox__native-control~.mdc-checkbox__ripple {
             border: 1px solid $color-focus-outline;
             background-color: transparent;
             opacity: 1;
         }
     }

     .xc-checkbox-label {
         text-transform: $xc-checkbox-text-transform;
         line-height: $xc-checkbox-height;
         font-size: $xc-checkbox-font-size;
         font-family: $font-family-regular;
         white-space: nowrap;
         letter-spacing: normal;
     }
 }

@each $key,$value in $color-map {
    :host[color="#{$key}"] {
        & {
            @if $xc-checkbox-with-background {
                @include mat.checkbox-overrides((
                    unselected-focus-icon-color: $value,
                    unselected-hover-icon-color: $value,
                    unselected-icon-color: $value,
                    disabled-selected-icon-color: $value,
                    selected-focus-icon-color: $value,
                    selected-hover-icon-color: $value,
                    selected-icon-color: $value,
                    selected-pressed-icon-color: $value
                ));
            }
            @else {
                @include mat.checkbox-overrides((
                    unselected-focus-icon-color: $color-background-default,
                    unselected-hover-icon-color: $color-background-default,
                    unselected-icon-color: $color-background-default,
                    disabled-selected-icon-color: $color-background-default,
                    selected-focus-icon-color: $color-background-default,
                    selected-hover-icon-color: $color-background-default,
                    selected-icon-color: $color-background-default,
                    selected-pressed-icon-color: $color-background-default
                ));
            }
        }
    }
}

 :host[color] {
    @include mat.checkbox-overrides((
        selected-checkmark-color: $xc-checkbox-checkmark-color,
        disabled-selected-checkmark-color: $xc-checkbox-checkmark-color-disabled,
        disabled-unselected-icon-color: $xc-checkbox-color-disabled,
        disabled-label-color: $xc-checkbox-color-disabled
    ));

    &.disabled::ng-deep .mdc-checkbox > .mdc-checkbox__background {
        border-color: $xc-checkbox-color-disabled;
    }
 }

 :host[color="invert"] {
    @include mat.checkbox-overrides((
        selected-checkmark-color: $xc-checkbox-checkmark-color-invert,
        disabled-selected-checkmark-color: $xc-checkbox-checkmark-color-disabled-invert,
        disabled-unselected-icon-color: $xc-checkbox-color-disabled-invert,
        disabled-label-color: $xc-checkbox-color-disabled-invert
    ));

    &.disabled::ng-deep .mdc-checkbox > .mdc-checkbox__background {
        border-color: $xc-checkbox-color-disabled-invert;
    }
 }

 :host::ng-deep .mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mdc-checkbox__ripple,
 :host::ng-deep .mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__ripple {
     border: 1px solid $color-focus-outline;
     background-color: transparent;
     opacity: 1;
 }