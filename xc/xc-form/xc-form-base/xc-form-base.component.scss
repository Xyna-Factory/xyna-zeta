/*
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 * Copyright 2023 Xyna GmbH, Germany
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 */

$xc-form-base-input-color: unset !default;
$xc-form-base-input-color-disabled: unset !default;
$xc-form-base-input-background-color: unset !default;
$xc-form-base-input-background-color-focus: unset !default;
$xc-form-base-input-background-color-disabled: unset !default;
$xc-form-base-input-background-color-hover: unset !default;

$xc-form-base-input-padding-top: unset !default;
$xc-form-base-input-padding-right: unset !default;
$xc-form-base-input-padding-bottom: unset !default;
$xc-form-base-input-padding-left: unset !default;
$xc-form-base-input-line-height: unset !default;
$xc-form-base-input-line-height-compact: unset !default;

$xc-form-base-input-font-size: unset !default;
$xc-form-base-input-font-style: unset !default;

$xc-form-base-input-border-radius: unset !default;
$xc-form-base-input-border-width: unset !default;
$xc-form-base-input-border-color: unset !default;
$xc-form-base-input-border-color-focus: unset !default;
$xc-form-base-input-border-color-disabled: unset !default;
$xc-form-base-input-border-color-hover: unset !default;

$xc-form-base-input-suffix-color: unset !default;
$xc-form-base-input-suffix-color-hover: unset !default;
$xc-form-base-input-label-color: unset !default;
$xc-form-base-input-error-color: unset !default;
$xc-form-base-input-placeholder-color: unset !default;
$xc-form-base-input-label-font-size: unset !default;
$xc-form-base-input-label-text-transform: unset !default;
$xc-form-base-input-changeindicator-color: unset !default;

$xc-form-base-textarea-padding: unset !default;
$xc-form-base-textarea-line-height: unset !default;


/* exported consts such that other components can read */

$validator-message-height: 18px;
$suffix-icon-height: 24px;

 
@use "sass:math";
@import 'const';


:host::ng-deep {

    pointer-events: none;
    width: 100%;

    .mat-form-field {

        display: unset;
        line-height: 0;

        mat-label {
            line-height: normal;
        }

        button {
            pointer-events: initial;
        }

        input, textarea {
            pointer-events: initial;
            margin: 0;
            padding-top: $xc-form-base-input-padding-top;
            padding-right: $xc-form-base-input-padding-right;
            padding-bottom: $xc-form-base-input-padding-bottom;
            padding-left: $xc-form-base-input-padding-left;
            font-size: $xc-form-base-input-font-size;
            font-style: $xc-form-base-input-font-style;
            vertical-align: middle;
            background-color: $xc-form-base-input-background-color-disabled;
            border-style: solid;
            border-width: $xc-form-base-input-border-width;
            border-color: $xc-form-base-input-border-color-disabled;
            border-radius: $xc-form-base-input-border-radius;
            color: $xc-form-base-input-color-disabled;


            &:not(:disabled):not(:read-only) {
                color: $xc-form-base-input-color;

                &:not(:focus) {
                    border-color: $xc-form-base-input-border-color;
                    background-color: $xc-form-base-input-background-color;

                    &:hover {
                        background-color: $xc-form-base-input-background-color-hover;
                        border-color: $xc-form-base-input-border-color-hover;
                    }
                }
            }

            &:focus {
                background-color: $xc-form-base-input-background-color-focus;
                border-color: $xc-form-base-input-border-color-focus;
                box-shadow: inset 0 0 2px $color-focus-outline;
            }

            &::placeholder {
                user-select: none;
                color: $xc-form-base-input-placeholder-color;
                opacity: 1;
            }
        }

        input {
            line-height: $xc-form-base-input-line-height;
            text-overflow: ellipsis;
            font-family: inherit;

            &.mat-input-element {
                box-sizing: border-box;
            }
        }

        // non-editable-input, see: ZETA-7
        input:first-child {

            &:read-only, &:disabled {
                display: none;

                & + .non-editable-input {
                    display: block;
                    width: 100%;
                    text-overflow: ellipsis;
                    overflow: hidden;
                    word-break: break-all;
                    white-space: nowrap;
                }
            }

        }

        textarea {
            line-height: $xc-form-base-textarea-line-height;
            padding: $xc-form-base-textarea-padding;
            width: unset;
        }

        // non-editable-input, see: ZETA-7
        // textarea:first-child {

        //     &:read-only, &:disabled {
        //         display: none;

        //         & + .non-editable-input {
        //             resize: none;
        //             display: flex;
        //             flex: 1 1 auto;
        //         }
        //     }

        // }

        .mat-form-field-infix {
            display: flex;
            padding: 0;
            width: unset;
            border: none;
            justify-content: space-between;
            flex-direction: column-reverse;
        }

        .mat-form-field-suffix {
            position: absolute;
            right: 0;
            bottom: 0;
            padding: math.div($xc-form-base-input-line-height + $xc-form-base-input-padding-top + $xc-form-base-input-padding-bottom + $xc-form-base-input-border-width*2 - $suffix-icon-height, 2) 4px;
            pointer-events: initial;
            user-select: none;
            color: $xc-form-base-input-suffix-color;
            transition: all $transition-time-fast ease;

            &:hover {
                color: $xc-form-base-input-suffix-color-hover;
            }
        }

        .mat-form-field-underline {
            display: none;
        }

        .mat-form-field-wrapper {
            padding: 0;
            margin-bottom: $validator-message-height;   // reserve space for validator message
        }

        .mat-form-field-label-wrapper {
            padding: 0;
            position: unset;
            padding-bottom: 2px;
        }

        .mat-form-field-label {
            border: 1px solid transparent;
            text-transform: initial;
            color: $xc-form-base-input-label-color;
            font-size: $xc-form-base-input-label-font-size;
            vertical-align: middle;
            line-height: 34px;
            width: calc(100% - 14px);
            left: 12px;
            top: auto;
        }

        &.mat-form-field-appearance-legacy.mat-form-field-should-float {

            .mat-form-field-label {
                text-transform: $xc-form-base-input-label-text-transform;
                font-size: $xc-form-base-input-label-font-size;
                vertical-align: initial;
                width: 100%;
                line-height: unset;
                transform: none;
                position: unset;
            }
        }

        .mat-form-field-subscript-wrapper {
            top: 100%;
            margin-top: 4px;
            line-height: initial;

            > div {
                text-transform: uppercase;
                font-size: 11px;

                > .mat-error {
                    color: $xc-form-base-input-error-color;
                    text-transform: none; // DM - Error messages should be able to display small letters
                    white-space: nowrap;
                    text-overflow: ellipsis;
                    overflow: hidden;
                }
            }
        }
    }
}


:host[xc-form-validator-required="true"] {
    mat-label::after {
        content: '\a0*';
        font-weight: bold;
    }

    // hide the material required-asterisk for we show one ourselves
    ::ng-deep.mat-placeholder-required {
        display: none;
    }
}


:host[suffix]:not([suffix=""])::ng-deep {
    .mat-form-field input:first-child {
        padding-right: 32px;
    }
}


:host.nolabel::ng-deep {
    .mat-form-field {
        .mat-form-field-infix {
            border-top: none;

            // label is used as a placeholder, so set placeholder color for it
            .mat-form-field-label {
                color: $xc-form-base-input-placeholder-color;
            }
        }
    }
}


// A single form item can be set compact which only sets a bottom margin on error
:host.compact.noerror::ng-deep {
    .mat-form-field-wrapper {
        margin-bottom: 0;
    }
}


// Form item inside a compact panel
xc-panel.compact :host {
    ::ng-deep .mat-form-field {
        input {
            line-height: $xc-form-base-input-line-height-compact;
        }

        .mat-form-field-suffix {
            padding: math.div($xc-form-base-input-line-height-compact + $xc-form-base-input-padding-top + $xc-form-base-input-padding-bottom + $xc-form-base-input-border-width*2 - $suffix-icon-height, 2) 4px;
        }
    }

    &.noerror {
        ::ng-deep .mat-form-field-wrapper {
            margin-bottom: 0;
        }
    }
}


:host.indicatechanges::ng-deep {
    .ng-dirty ~ .mat-form-field-label-wrapper::after {
        position: absolute;
        width: 0;
        height: 0;

        // content: "*";
        // top: 20px;
        // right: 14px;
        // font-size: 20px;
        // color: #fabb00;

        content: "";
        top: 21px;
        right: 1px;
        border-top: 8px solid $xc-form-base-input-changeindicator-color;
        border-left: 8px solid transparent;
    }

    .ng-dirty:hover ~ .mat-form-field-label-wrapper::after,
    .ng-dirty:focus ~ .mat-form-field-label-wrapper::after {
        border-width: 0px;
        transition: all $transition-time-fast ease;
    }
}
